// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
//        jcenter()
//        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
//        maven { url 'https://dl.google.com/dl/android/maven2' }
//        google()
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/google' }
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath 'com.google.gms:google-services:3.2.1'

        classpath 'de.undercouch:gradle-download-task:3.1.2'
        classpath "com.newrelic.agent.android:agent-gradle-plugin:5.+"
    }
}


allprojects {
    repositories {
//        jcenter()
//        mavenCentral()
//        google()
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/google' }
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
        maven { url "https://www.jitpack.io" }
        //All of React Native (JS, Android binaries) is installed from npm
//        maven {
//            url "$rootDir/rn/crm/node_modules/react-native/android"
//        }
    }
}

// camera 需要使用了其他的lib版本，需要用此方式限制保持一致
subprojects {
    project(":react-native-camera").configurations.all {
        resolutionStrategy {
            dependencySubstitution {
                substitute module('com.facebook.react:react-native') with project(':ReactAndroid')
            }
        }
    }
}

ext {
    // The following are only a few examples of the types of properties you can define.
    compileSdkVersion = 27
    buildToolsVersion = '28.0.2'

    // You can also use this to specify versions for dependencies. Having consistent
    // versions between modules can avoid behavior conflicts.
    supportLibVersion = "27.0.1"
}

task clean(type: Delete) {
    delete rootProject.buildDir
}








