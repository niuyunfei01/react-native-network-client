project.ext.react = [
        // your index js if not default, other settings
        // Hermes JSC ?
        enableHermes: true,
]

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

/**
 * Run Proguard to shrink the Java bytecode in release builds.
 */
def enableProguardInReleaseBuilds = false

def jscFlavor = 'org.webkit:android-jsc:+'
def enableHermes = project.ext.react.get("enableHermes", true);

apply plugin: 'com.android.application'
apply plugin: 'newrelic'
apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"
subprojects {
    configurations.all {
        exclude group: 'com.facebook.fresco', module: 'imagepipeline-okhttp3'
        exclude group: 'com.facebook.react', module: 'react-native'
    }
}



dependencies {

    implementation project(path: ':react-native-get-random-values')
    final SUPPER_TOAST_VERSION = '1.3.4@aar'
    final RETROFIT_VERSION = '2.2.0'
//    implementation "org.webkit:android-jsc:+"
    //noinspection GradleDependency
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.gridlayout:gridlayout:1.0.0"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.0.0"
    implementation "androidx.appcompat:appcompat:1.0.0"
    implementation "com.google.android.material:material:1.0.0"

    implementation "com.facebook.react:react-native:${safeExtGet('reactNativeVersion', '+')}"

    implementation "com.github.johnpersano:supertoasts:$SUPPER_TOAST_VERSION"

    implementation 'com.google.guava:guava:20.0'
    implementation 'in.srain.cube:ultra-ptr:1.0.11'
    implementation fileTree(include: '*.jar', exclude: ['*-javadoc.jar', '*-sources.jar'], dir: 'libs')

    implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    implementation("com.squareup.retrofit2:retrofit:$RETROFIT_VERSION")
    implementation("com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION") {
        exclude group: 'com.google.code.gson'
    }
    implementation ('com.squareup.okhttp3:logging-interceptor:3.10.0') {
        exclude (group: 'com.squareup.okhttp3', module: 'okhttp')
    }
    implementation 'com.google.code.gson:gson:2.7'
    compileOnly 'com.github.bumptech.glide:glide:3.7.0'

    implementation 'com.squareup.picasso:picasso:2.5.2'
    compileOnly 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    implementation 'org.xutils:xutils:3.3.36'

    implementation 'androidx.multidex:multidex:2.0.0'
    implementation 'com.roughike:bottom-bar:2.3.1'
    implementation 'me.dm7.barcodescanner:zxing:1.9.8'

    implementation 'com.github.yalantis:ucrop:2.2.1-native'

    //支持扫码时引入的，忘记用来干嘛的，先注释掉
    //implementation("com.google.zxing:core:3.3.3")

    implementation('io.reactivex.rxjava2:rxjava:2.2.19')
    implementation 'id.zelory:compressor:2.1.1'

    implementation ('com.xdandroid:hellodaemon:+') {
        exclude module: 'io.reactivex.rxjava2'
    }

    releaseImplementation 'ch.acra:acra:4.9.2'

    implementation 'cn.jiguang.sdk:jpush:3.1.6'  // 此处以JPush 3.1.6 版本为例。
    implementation 'cn.jiguang.sdk:jcore:1.2.5'  // 此处以JCore 1.2.5 版本为例。

    implementation 'com.clj.fastble:FastBleLib:2.3.2'
    implementation 'org.greenrobot:eventbus:3.1.1'


    implementation 'com.llew.huawei:verifier:1.1.1'
    implementation "com.newrelic.agent.android:android-agent:5.24.3"
    implementation ("com.qiniu:qiniu-android-sdk:7.3.15") {
        exclude (group: 'com.squareup.okhttp3', module: 'okhttp')
        exclude (group: 'com.squareup.okio', module: 'okio')
    }
    implementation project(':react-native-gesture-handler')
//    implementation project(path: ':@react-native-community_viewpager')
    implementation (project(':@react-native-async-storage'))
    implementation (project(':@react-native-datetimepicker'))
    implementation (project(':react-native-vector-icons'))
//    implementation project(':react-native-i18n')
    implementation (project(':react-native-splash-screen'))
    implementation (project(':RCTWeChat'))
    implementation (project(':@react-native-picker'))
    implementation (project(':react-native-webview'))
    implementation (project(':react-native-pager-view'))
    implementation (project(':react-native-screens'))
    implementation (project(':react-native-reanimated'))
    implementation (project(':react-native-safe-area-context'))
    implementation (project(':react-native-camera'))
    implementation (project(':react-native-sound'))
    implementation (project(path: ':rn-fetch-blob'))
    implementation (project(path: ':rn-app-upgrade'))
    implementation (project(":react-native-newrelic"))
    implementation fileTree(dir: "../../node_modules/react-native-newrelic/android/libs", include: ["*.jar"])

    if (enableHermes) {
        // for RN 0.61+
        def hermesPath = "../../node_modules/hermes-engine/android/";
        debugImplementation files(hermesPath + "hermes-debug.aar")
        releaseImplementation files(hermesPath + "hermes-release.aar")
    } else {
        implementation jscFlavor
    }
}

// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the print sample code.
List<String> dirs = [
        'print',     // print sample code; look here for the interesting stuff.
        'common',   // components that are reused by multiple samples
        'template'] // boilerplate code that is generated by the sample template process

android {

    compileSdkVersion safeExtGet('compileSdkVersion', 28)
    buildToolsVersion safeExtGet('buildToolsVersion', '28.0.2')

    dexOptions {
        javaMaxHeapSize "4g"
    }

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        ndk.abiFilters 'armeabi-v7a','arm64-v8a','x86','x86_64'

        packagingOptions {
            exclude '/lib/mips64/**'
            exclude '/lib/arm64-v8a/**'
            exclude '/lib/x86_64/**'
        }

        applicationId "cn.cainiaoshicai.crm"

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "30073ab80a50534d39c84d3c", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]

        missingDimensionStrategy 'react-native-camera', 'general'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                res.srcDirs "src/${dir}/res"
            }
            jniLibs.srcDirs = ['libs']
        }

        androidTest.setRoot('tests')
        androidTest.java.srcDirs = ['tests/src']

    }

    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/rxjava.properties'
        exclude 'res/drawable-*-v4/*'
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        release {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('debug.keystore')
            storePassword 'android'
            if (System.getenv("KEYSTORE") != null) {
                storeFile file(System.getenv("KEYSTORE"))
                storePassword System.getenv("KEYSTORE_PASSWORD")
                keyAlias System.getenv("KEY_ALIAS")
                keyPassword System.getenv("KEY_PASSWORD")
            }
        }
    }

    buildTypes {
        debug {
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-android.txt'

            applicationIdSuffix ""
            versionNameSuffix "-debug"
            resValue "string", "applicationId", "cn.cainiaoshicai.crm" + getApplicationIdSuffix()
            resValue "string", "cainiaoshicai_com",
                    "cn.cainiaoshicai.crm" + getApplicationIdSuffix() + ".mention://@Cainiao-CRM"
            debuggable true
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-android.txt'

            resValue "string", "applicationId", "cn.cainiaoshicai.crm"
            resValue "string", "Cainiaoshicai.cn",
                    "cn.cainiaoshicai.crm" + ".mention://@Cainiao-CRM"
            debuggable false
            signingConfig signingConfigs.release
        }

    }

    configurations.all {
        resolutionStrategy {
            force "com.facebook.soloader:soloader:0.8.2"
        }
    }
}