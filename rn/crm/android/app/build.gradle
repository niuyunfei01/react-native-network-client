project.ext.react = [
        // your index js if not default, other settings
        // Hermes JSC ?
        enableHermes: true,
]


def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

/**
 * Run Proguard to shrink the Java bytecode in release builds.
 */
def enableProguardInReleaseBuilds = false

def jscFlavor = 'org.webkit:android-jsc:+'
def enableHermes = project.ext.react.get("enableHermes", true);
def enableSeparateBuildPerCPUArchitecture = true


apply plugin: 'com.android.application'
apply plugin: 'newrelic'
apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"
apply plugin: 'com.huawei.agconnect'
subprojects {
    configurations.all {
        exclude group: 'com.facebook.fresco', module: 'imagepipeline-okhttp3'
        exclude group: 'com.facebook.react', module: 'react-native'
    }
}

dependencies {

    implementation project(path: ':react-native-get-random-values')
    final SUPPER_TOAST_VERSION = '1.3.4@aar'
    final RETROFIT_VERSION = '2.2.0'
//    implementation "org.webkit:android-jsc:+"
    //noinspection GradleDependency
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.gridlayout:gridlayout:1.0.0"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.0.0"
    implementation "androidx.appcompat:appcompat:1.0.0"
    implementation "com.google.android.material:material:1.0.0"
    implementation 'com.fanjun:keeplive:1.1.22'

    implementation 'cn.jiguang.sdk.plugin:xiaomi:4.8.1'
//JPush Android SDK 4.6.0 以上版本更新华为 HMS SDK 版本为:6.3.0.304 及以上版本,接入要求：Android Studio 3.6.1 或更高版本、Android Gradle 插件 3.5.4 或更高版本。
    implementation 'com.huawei.hms:push:6.5.0.300'
    //厂商版本和 JPush SDK 版本保持一致
    implementation 'cn.jiguang.sdk.plugin:huawei:4.8.1'
//厂商版本和JPush SDK版本保持一致
    //implementation 'cn.jiguang.sdk.plugin:meizu:4.8.1'
//厂商版本和 JPush SDK 版本保持一致
    implementation 'cn.jiguang.sdk.plugin:vivo:4.8.1'
//    implementation 'cn.jiguang.sdk.plugin:oppo:4.8.1'
//// JPush Android SDK v4.6.0 开始，需要单独引入 oppo 厂商 aar ，请下载官网 SDK 包并把 jpush-android-xxx-release/third-push/oppo/libs 下的 aar 文件单独拷贝一份到应用 module/libs 下//
//    implementation(name: 'com.heytap.msp-push-3.1.0', ext: 'aar')
//    //以下为 OPPO 3.1.0 aar需要依赖
//
//    implementation 'commons-codec:commons-codec:1.6'
//    implementation 'androidx.annotation:annotation:1.1.0'


    implementation "com.facebook.react:react-native:${safeExtGet('reactNativeVersion', '+')}"

    implementation "com.github.johnpersano:supertoasts:$SUPPER_TOAST_VERSION"

    implementation 'com.google.guava:guava:20.0'
    implementation 'in.srain.cube:ultra-ptr:1.0.11'
    implementation fileTree(include: '*.jar', exclude: ['*-javadoc.jar', '*-sources.jar'], dir: 'libs')

    implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    implementation("com.squareup.retrofit2:retrofit:$RETROFIT_VERSION")
    implementation("com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION") {
        exclude group: 'com.google.code.gson'
    }
    implementation('com.squareup.okhttp3:logging-interceptor:3.10.0') {
        exclude(group: 'com.squareup.okhttp3', module: 'okhttp')
    }
    implementation 'com.google.code.gson:gson:2.7'
    compileOnly 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    compileOnly 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    implementation 'org.xutils:xutils:3.3.36'

    implementation 'androidx.multidex:multidex:2.0.0'
    implementation 'com.roughike:bottom-bar:2.3.1'
    implementation 'me.dm7.barcodescanner:zxing:1.9.8'

    implementation 'com.github.yalantis:ucrop:2.2.1-native'

    //支持扫码时引入的，忘记用来干嘛的，先注释掉
    //implementation("com.google.zxing:core:3.3.3")

    implementation('io.reactivex.rxjava2:rxjava:2.2.19')
    implementation 'id.zelory:compressor:2.1.1'

    implementation('com.xdandroid:hellodaemon:+') {
        exclude module: 'io.reactivex.rxjava2'
    }

    releaseImplementation 'ch.acra:acra:4.9.2'

    implementation 'org.greenrobot:eventbus:3.1.1'

    implementation 'com.llew.huawei:verifier:1.1.1'
    implementation "com.newrelic.agent.android:android-agent:5.28.1"
    implementation("com.qiniu:qiniu-android-sdk:7.3.15") {
        exclude(group: 'com.squareup.okhttp3', module: 'okhttp')
        exclude(group: 'com.squareup.okio', module: 'okio')
    }
    implementation project(':@react-native-community_geolocation')
    implementation project(':@react-native-community_clipboard')
    implementation project(':@react-native-community_slider')
    implementation project(':@react-native-community_cameraroll')
    implementation project(':@react-native-community_datetimepicker')
    implementation project(':@react-native-community_masked-view')
    implementation project(':react-native-linear-gradient')
    implementation project(':react-native-gesture-handler')
    implementation(project(':@react-native-async-storage'))
    implementation(project(':react-native-vector-icons'))
    implementation(project(':react-native-splash-screen'))
    implementation(project(':RCTWeChat'))
    implementation(project(':react-native-webview'))
    implementation(project(':react-native-pager-view'))
    implementation(project(':react-native-screens'))
    implementation(project(':react-native-reanimated'))
    implementation(project(':react-native-safe-area-context'))
    implementation(project(':react-native-camera'))
    implementation(project(':react-native-sound'))
    implementation(project(':react-native-alipay'))
    implementation(project(path: ':rn-fetch-blob'))
    implementation(project(path: ':rn-app-upgrade'))
    implementation(project(":react-native-ble-manager"))
    implementation(project(':react-native-svg'))
    implementation(project(':mixpanel-react-native'))
    implementation project(':react-native-fast-image')
    implementation project(':react-native-amap3d')
    implementation fileTree(dir: "../../node_modules/jpush-react-native/android/libs", include: ["*.jar"])
    implementation fileTree(dir: "../../node_modules/jcore-react-native/android/libs", include: ["*.jar"])
    implementation project(':jpush-react-native')  // 添加 jpush 依赖
    implementation project(':jcore-react-native')  // 添加 jcore 依赖

    if (enableHermes) {
        // for RN 0.61+
        def hermesPath = "../../node_modules/hermes-engine/android/";
        debugImplementation files(hermesPath + "hermes-debug.aar")
        releaseImplementation files(hermesPath + "hermes-release.aar")
    } else {
        implementation jscFlavor
    }
}

// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the print sample code.
List<String> dirs = [
        'print',     // print sample code; look here for the interesting stuff.
        'common',   // components that are reused by multiple samples
        'template'] // boilerplate code that is generated by the sample template process

android {

    compileSdkVersion safeExtGet('compileSdkVersion', 28)
    buildToolsVersion safeExtGet('buildToolsVersion', '28.0.2')

    dexOptions {
        javaMaxHeapSize "4g"
    }
    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk enableSeparateBuildPerCPUArchitecture
            include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
        }
    }
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        ndk.abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'

        packagingOptions {
            exclude '/lib/mips64/**'
        }

        applicationId "cn.cainiaoshicai.crm"

        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                JPUSH_APPKEY  : "30073ab80a50534d39c84d3c", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.

                XIAOMI_APPKEY : "MI-5561767559358",// 小米平台注册的appkey
                XIAOMI_APPID  : "MI-2882303761517675358", // 小米平台注册的appid

                VIVO_APPKEY   : "fbd582b2fd5fc76ae1fe3d5d6fbea7c8", // VIVO平台注册的appkey
                VIVO_APPID    : "100163985", // VIVO平台注册的appid

                OPPO_APPKEY   : "OP-ABE43Cbf25Bdfc754cF9b1d1d20BB2b6", // OPPO平台注册的appkey
                OPPO_APPID    : "OP-3609862", // OPPO平台注册的appid
                OPPO_APPSECRET: "OP-sM4zy3WQ1Es0cOwW8kcKcK0o"//OPPO平台注册的appsecret
        ]

        missingDimensionStrategy 'react-native-camera', 'general'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                res.srcDirs "src/${dir}/res"
            }
            jniLibs.srcDirs = ['libs']
        }

        androidTest.setRoot('tests')
        androidTest.java.srcDirs = ['tests/src']

    }

    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/rxjava.properties'
        exclude 'res/drawable-*-v4/*'
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        release {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('debug.keystore')
            storePassword 'android'
            if (System.getenv("KEYSTORE") != null) {
                storeFile file(System.getenv("KEYSTORE"))
                storePassword System.getenv("KEYSTORE_PASSWORD")
                keyAlias System.getenv("KEY_ALIAS")
                keyPassword System.getenv("KEY_PASSWORD")
            }
        }
    }

    buildTypes {
        debug {
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-android.txt'

            applicationIdSuffix ""
            versionNameSuffix "-debug"
            resValue "string", "applicationId", "cn.cainiaoshicai.crm" + getApplicationIdSuffix()
            resValue "string", "cainiaoshicai_com",
                    "cn.cainiaoshicai.crm" + getApplicationIdSuffix() + ".mention://@Cainiao-CRM"
            debuggable true
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-android.txt'
            resValue "string", "applicationId", "cn.cainiaoshicai.crm"
            resValue "string", "Cainiaoshicai.cn",
                    "cn.cainiaoshicai.crm" + ".mention://@Cainiao-CRM"
            debuggable false
            signingConfig signingConfigs.release
        }

    }

    configurations.all {
        resolutionStrategy {
            force "com.facebook.soloader:soloader:0.8.2"
        }
    }
}
